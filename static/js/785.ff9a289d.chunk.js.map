{"version":3,"file":"static/js/785.ff9a289d.chunk.js","mappings":"gOACA,GAAgB,KAAO,mBAAmB,KAAO,mBAAmB,QAAU,sBAAsB,QAAU,sBAAsB,KAAO,oB,SCyC3I,MAhCA,WACE,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACSC,EAAAA,EAAAA,IAAiBH,GAE/BI,MAAK,SAAAC,GACJN,EAAaM,EAAKC,KACnB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACR,IACwB,IAArBF,EAAUa,QACf,uBAAG,uCAEH,eAAIC,UAAWC,EAAAA,KAAf,SACGf,EAAUgB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAvB,EAAkCC,GAAlC,OACb,gBAAIN,UAAWC,EAAAA,KAAf,WACE,gBACED,UAAWC,EAAAA,QACXM,IAAKJ,EAtBA,kCAsB0BA,E,qyIAC/BK,IAAKJ,KAEP,iBAAKJ,UAAWC,EAAAA,QAAhB,WACE,cAAGD,UAAWC,EAAAA,KAAd,SAA2BG,KAC3B,eAAGJ,UAAWC,EAAAA,UAAd,UAA+B,cAAYI,UChBnC,eAACI,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACP,EAAIQ,GAWvD,OARER,IAFFQ,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDQoBG,GADnB,KAepB,C,mMEvCDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD5D,cACGE,EADH,yBAEIA,EAAS5B,MAFb,kEAKE,SAAe6B,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBL,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DI,IAFhF,cACCF,EADD,yBAIEA,EAAS5B,MAJX,kEAOA,SAAe+B,EAAtB,+CAAO,OAAP,oBAAO,WAA4BlB,GAA5B,uFACkBY,EAAAA,EAAAA,IAAA,gBACZZ,EADY,oBACEa,EADF,oBADlB,cACCE,EADD,yBAIEA,EAAS5B,MAJX,kEAOA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAAgCe,GAAhC,uFACkBY,EAAAA,EAAAA,IAAA,gBACZZ,EADY,4BACUa,EADV,oBADlB,cACCE,EADD,yBAIEA,EAAS5B,MAJX,kEAOA,SAAegC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCnB,GAAnC,uFACkBY,EAAAA,EAAAA,IAAA,gBACZZ,EADY,4BACUa,EADV,oBADlB,cACCE,EADD,yBAIEA,EAAS5B,MAJX,kE","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","../node_modules/nanoid/index.browser.js","components/api/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"profile\":\"Cast_profile__m8TAO\",\"details\":\"Cast_details__88pxz\",\"name\":\"Cast_name__6UbFm\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { movieDetailsCast } from '../api/api';\nimport style from './Cast.module.css';\n\nimport error from '../../NotAvailable/no-photo.png';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nfunction Cast() {\n  const [movieData, setMovieData] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const response = movieDetailsCast(movieId);\n    response\n      .then(data => {\n        setMovieData(data.cast);\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n  return movieData.length === 0 ? (\n    <p>Sorry, we don't have information!</p>\n  ) : (\n    <ul className={style.list}>\n      {movieData.map(({ profile_path, name, character, id }) => (\n        <li className={style.item} key={nanoid()}>\n          <img\n            className={style.profile}\n            src={profile_path ? BASE_URL + profile_path : error}\n            alt={name}\n          />\n          <div className={style.details}>\n            <p className={style.name}>{name}</p>\n            <p className={style.character}>Character: {character}</p>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\nexport default Cast;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'd46fe50954ecb8065dcaa214ccc0bcb9';\n\nexport async function trendingMovie() {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n  }\n  \n  export async function searchMovie(value) {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${value}`\n    );\n    return response.data;\n  }\n  \n  export async function movieDetails(id) {\n    const response = await axios.get(\n      `movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  }\n  \n  export async function movieDetailsCast(id) {\n    const response = await axios.get(\n      `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  }\n  \n  export async function movieDetailsReviews(id) {\n    const response = await axios.get(\n      `movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  }\n"],"names":["useState","movieData","setMovieData","movieId","useParams","useEffect","movieDetailsCast","then","data","cast","catch","error","console","log","length","className","style","map","profile_path","name","character","id","src","alt","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","axios","API_KEY","trendingMovie","response","searchMovie","value","movieDetails","movieDetailsReviews"],"sourceRoot":""}